.. _isoexam:

isoexam: Plot ellipses on the image display (interactive).
==========================================================

**Package: isophote**

.. raw:: html

  <section id="s_usage">
  <h3>Usage</h3>
  <p>
  isoexam  table 
  </p>
  </section>
  <section id="s_description">
  <h3>Description</h3>
  <p>
  The 'isoexam' task takes as input a table generated by task 'ellipse'.
  It displays the original image in the gray-scale image display (or
  alternatively uses a contour plot in the graphics window), and superposes 
  on it all ellipses contained in the table. 
  </p>
  <p>
  After graphing the ellipses, control goes to the image (or graphics)
  cursor, where the same commands available in the 'ellipse' task for
  display/roam/zoom, are available to examine the image and the fitted
  ellipses.
  </p>
  <p>
  The image display server (Ximtool, SAOimage) must be present before
  starting this task. It uses frame buffer #1.
  </p>
  </section>
  <section id="s_parameters">
  <h3>Parameters</h3>
  <dl id="l_table">
  <dt><b>table [file name]</b></dt>
  <!-- Sec='PARAMETERS' Level=0 Label='table' Line='table [file name]' -->
  <dd>Table containing the results of isophotometry analysis 
  (i.e., the table produced by 'ellipse').
  </dd>
  </dl>
  <dl>
  <dt><b>(dqf = <span style="font-family: monospace;">""</span>) [file name]</b></dt>
  <!-- Sec='PARAMETERS' Level=0 Label='' Line='(dqf = "") [file name]' -->
  <dd>Data Quality File name or extension. This is used to plot masked-out pixels
  on the image/graphics display. If set to <span style="font-family: monospace;">"none"</span>, eventually existing 
  DQF is ignored.
  </dd>
  </dl>
  <dl>
  <dt><b>(device = <span style="font-family: monospace;">"red"</span>) [string, allowed values: </b></dt>
  <!-- Sec='PARAMETERS' Level=0 Label='' Line='(device = "red") [string, allowed values: ' -->
  <dd>|stdgraph |white |red |green |blue 
  |yellow]
  Interactive device. For gray-scale image servers ('Ximtool', 'SAOimage'), 
  use color of graphics overlay. Server process must be already activated
  at workstation. For standard IRAF line-graphics, use 'stdgraph'.
  </dd>
  </dl>
  <dl>
  <dt><b>(icommands = <span style="font-family: monospace;">""</span>) [*imcur]</b></dt>
  <!-- Sec='PARAMETERS' Level=0 Label='' Line='(icommands = "") [*imcur]' -->
  <dd>Optional file with image cursor commands. If left empty, task will read
  standard <span style="font-family: monospace;">"imcur"</span> input when in interactive mode.
  </dd>
  </dl>
  <dl>
  <dt><b>(gcommands = <span style="font-family: monospace;">""</span>) [*gcur]</b></dt>
  <!-- Sec='PARAMETERS' Level=0 Label='' Line='(gcommands = "") [*gcur]' -->
  <dd>Optional file with graphics cursor commands. If left empty, task will read
  standard <span style="font-family: monospace;">"gcur"</span> input when in interactive mode.
  </dd>
  </dl>
  </section>
  <section id="s_examples">
  <h3>Examples</h3>
  </section>
  <section id="s_bugs">
  <h3>Bugs</h3>
  <p>
  To speed up plotting, the task has to read the full image array into memory.
  In memory-tight environments and when dealing with large images, it may 
  bomb out with <span style="font-family: monospace;">"Out of memory"</span> error.
  </p>
  </section>
  <section id="s_references">
  <h3>References</h3>
  <p>
  This task was written by I.Busko
  </p>
  </section>
  <section id="s_see_also">
  <h3>See also</h3>
  <p>
  iscursor, ellipse, isoimap, display, contour
  </p>
  
  </section>
  
  <!-- Contents: 'NAME' 'USAGE' 'DESCRIPTION' 'PARAMETERS' 'EXAMPLES' 'BUGS' 'REFERENCES' 'SEE ALSO'  -->
  
